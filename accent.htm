<html>
<head>
<title>Accent Fixer</title>
<meta content="text/html; charset=UTF-8" http-equiv="content-type">
<style type="text/css">
h1,h3 { text-align:center; }
body{
	background-color:#ffffff;
	padding:2em;
}
#init {
	width:100%;
	height:15em;
}
.rb {
	margin:0;
	padding:0;
	border:0;
}
.yb {
	background-color: yellow;
}
.po {
	display:inline-block;
}
.rh {
	background-color:#faa;
	border:1px solid black;
}
.gh {
	background-color:#afa;
}
</style>
</head>
<body>
<div>
<textarea id='init'></textarea>
</div>
<button onclick='acchk()'>convert</button><br/><br/>
<input type="text" id="kchoose"/><br/><br/><hr/><br/>
<div class='html' id='out'></div>
<hr/>
<div class='html' id='out2'></div>

<script type='text/javascript'>

var i = document.getElementById('init');
var o = document.getElementById('out');
var oplain = document.getElementById('out2');
var kinput = document.getElementById('kchoose');

kinput.onkeyup = fnkeychooser;
/*
æǽ œœ́ áéíóúý m̃
ÆǼ ŒŒ́ ÁÉÍÓÚÝ

*/
var n = '[^a-záéíóúýǽœ́æë]';

var na = '[a-zæœë]';
var all = '[a-záéíóúýǽœ́æë]';
var c = '(?:[bcdfhjklmnprstvwxz]|[gq]u|[gq](?!u))';
var v = '[aeiouyæœë]';
var va = '(?:[áéíóúýǽ]|œ́)';

var rx = new RegExp('('+n+'|^)('+na+'+)'+'(?='+n+')','ig');
function acchk() {
	var itxt = i.value;
	otxt = itxt.replace(rx, function($0, $1, $2, i, str) {
		// get rid of words with less than 2 syllables
		var rx2 = new RegExp(
			'^'+c+'*?((au|[qg]u'+v+'|'+v+')'+c+'*?){1,2}$','i');
		if(rx2.test($2)) return $0;
		
		// need to find penult and antepenult and give accent options
		var syll = '((au)|([qg]u)('+v+')|('+v+')('+c+'*?))';
		var rx23 = new RegExp('((?:'+c+'|'+v+')*)'+syll+syll+syll+'$','i');
		var o2 = $2.replace(rx23, function() {
			var a = arguments;
			var x3 = '', x2 = '';
			var fnrepl = function(x) {
				return x.replace('a','á').replace('A','Á')
					.replace('e','é').replace('E','É')
					.replace('i','í').replace('I','Í')
					.replace('o','ó').replace('O','Ó')
					.replace('u','ú').replace('U','Ú')
					.replace('y','ý').replace('Y','Ý')
					.replace('æ','ǽ').replace('Æ','Ǽ')
					.replace('œ','œ́').replace('Œ','Œ́');
			};
			var bo = '';//"<button class='rb'>";
			var bc = '';//"</button>";
			if(a[3]!=null) x3 += bo+a[3].replace('a','á').replace('A','Á')+bc;
			if(a[4]!=null) x3 += a[4];
			if(a[5]!=null) x3 += bo+fnrepl(a[5])+bc;
			if(a[6]!=null) x3 += bo+fnrepl(a[6])+bc;
			if(a[7]!=null) x3 += a[7];
				
			if(a[9]!=null) x2 += bo+a[9].replace('a','á').replace('A','Á')+bc;
			if(a[10]!=null) x2 += a[10];
			if(a[11]!=null) x2 += bo+fnrepl(a[11])+bc;
			if(a[12]!=null) x2 += bo+fnrepl(a[12])+bc;
			if(a[13]!=null) x2 += a[13];
			var po = "<div class='po rh'>";
			var pc = "</div>";
			bo = "<div class='po' onclick='fnclickchooser(this)'>";
			bc = "</div>";
			return po+bo+a[1]+x3+a[8]+a[14]+bc+"<br>"
				+bo+a[1]+a[2]+x2+a[14]+bc+pc;
		});

		return $1 + o2;
	});
	o.innerHTML = otxt;
	fnoplain();
	fnkeychooser(null);
}

function fnoplain() {
	var retval = '';
	for(var j=0;j<o.childNodes.length;j++) {
		var n = o.childNodes[j];
		if(n.nodeName=="#text") retval += n.nodeValue;
		else if(n.children.length>0) {
			for(var k=0;k<n.children.length;k++) {
				var n2 = n.children[k];
				if(n2.style.display=="") retval+= n2.innerHTML;
			}
		}
	}
	oplain.innerHTML = retval;
}

function objindex(e) {
	var p = e.parentElement;
	for(var j=0;j<p.children.length;j++){
		if(p.children[j]==e) return j;
	}
	return -1;
}

function fnchooser(p, choice) {
	var d = '';
	if(choice==0) {
		p.classList.remove('gh');
		p.classList.add('rh');
		p.children[0].style.display = "";
		p.children[1].style.display = "";
		p.children[2].style.display = "";
	} else if(choice==1) {
		p.classList.remove('rh');
		p.classList.add('gh');
		p.children[0].style.display = "";
		p.children[1].style.display = "none";
		p.children[2].style.display = "none";
	} else if(choice==2) {
		p.classList.remove('rh');
		p.classList.add('gh');
		p.children[0].style.display = "none";
		p.children[1].style.display = "none";
		p.children[2].style.display = "";
	}
	/*
	var j = objindex(p);
	if(j>0) {
		var ktxt = kinput.value;
		if(j>ktxt.length) 
			ktxt += '-'.repeat(j-ktxt.length-1) + choice;
		else 
			ktxt = ktxt.substr(0,j) + choice + ktxt.substr(j+1);
		kinput.value = ktxt;
	}
	*/
	fnoplain();
	//debugger;
}

function fnclickchooser(e) {
	var p = e.parentElement;
	if(p.classList.contains('rh')) {
		if(p.children[0] == e) fnchooser(p, 1);
		else if(p.children[2] == e) fnchooser(p, 2);
	} else {
		fnchooser(p, 0);
	}
}

function fnkeychooser(e) {
	if(e!=null && ["0","1","2","-","Delete","Backspace",].indexOf(e.key)<0) return;
	if(e==null) e = {target:kinput};
	if(o.innerHTML.length==0) acchk();
	var nums = e.target.value;
	for(var j=0;j<o.children.length;j++) {
		var jnum = 0;
		if(nums.length>j) jnum = nums.substr(j,1);
		var jobj = o.children[j];
		if(jnum==1) fnchooser(jobj,1);
		else if(jnum==2) fnchooser(jobj,2);
		else fnchooser(jobj,0);
	}
}

</script>

</body>
</html>
